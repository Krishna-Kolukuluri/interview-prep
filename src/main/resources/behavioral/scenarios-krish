19.	Tell me about yourself:
    a.	I’m S/w engineer with 14+ years’ experience in building/managing s/w products for financial institutions using
        various technologies i.e., primarily Java/python & c#.Net.
    b.	In my current role I’m building/supporting trading & risk applications for DB fixed income corporation using
        Java/python/angular/spring boot
    c.	Responsible for 3 applications at tech lead/engineering manager capacity
    d.	Have 9/12 people reporting to me who are working on these three applications
    e.	I am very adoptable to new technologies and technology agnostic
    f.	I am curious about new technologies and have appetite for constantly learning new tech & making my applications
        more efficient
    g.	I have +ve and never give-up attitude which helped in my career constantly deliver projects on time.

1. What would you consider your area of technical expertise?
    Designing, developing and implementing Restful APIs.
    Designing & architecting distributed systems
    Designing, developing single page web applications using angular/react
    Creating/Configuring CI/CD pipelines for applications

2. What is most important to you for a new position?
    Opportunities to grow and progress within the company.
    Scope to make a positive impact on shaping-up the product/application and
    on the team.

3. Why are you considering a new position? (Please provide specific reasons.)
    I learned valuable skills in last 8.5 years at my current role got promoted
    three times, but I am no longer feeling challenged with the work.
    I am ready for new challenges and chance to make an impact in my new
    role/position.

4. Please describe your experience leading (either formally or informally) a group/team in a project?
    I believe a great leader is someone who can make good decisions while
    also taking into account opinions and feelings of
    his team members. Also, willing to admit when he is wrong and adopt.

    In my current role, I’m responsible for leading a team of 12 engineers with different roles, which
    includes supervising, managing, training and mentoring them. I enjoy the
    responsibility of leadership and I strive to make my team and project/product
    successful and create a positive impact in the organization.
    In my current team, three people got promoted in last few years while I
    was mentoring them.

    I was able to successfully lead many initiatives from idea inception stage
    to final product and deliver to customers on
    time which had substantial impact on business I was supporting.

5. Why you interested in our company (Grubhub)?
    I have couple of reasons for my interest in your company
    Reason1: The achievements and progress company made is really impressive
    Reason 2: Products company develop and I see your company as technology agnostic.
    It makes me feel excited to work in such a company where I see the way of
    developing my career in a constantly moving forward xxxx company.
    I feel I will succeed in the role because of my experience.

6. Tell me about a time where you disagreed with a product manager and how you resolved the situation?

7. What is your greatest strength?
    Action   and Detail oriented(Results oriented), Positive Attitude,
    Persistence and Perfectionist/Determined

8. Weakness
    Take on too much responsibility and Perfectionist

9. Why should we hire you?
    I will quickly "ADD Value" to your company in this role.
    I am self starter and can be left alone to complete tasks quickly,diligently and  on time.
    I will bring +ve attitude to this position and I always take responsibility
    for my own professional development.
    Over the years I have built up extensive knowledge ,expertise and transferable skills.

10.Where do you see yourself in next 5 years?
   In 5 years of time I will have participated in numerous team projects and
   helped business move forward significantly. I would want to be seen as
   a reliable and productive member of your organization who can be
   relied upon to deliver results both on time and to the requested standard.

12.	Success stories:
    a.	KDF: Really went well
        i.	Identifying Problem
        ii.	Proposing Solution
        iii.Delivering it in time with agreed SLA
        iv.	Collaborated with consumers and producers of this data
        v.	Helped save $$ by freeing up resource by automating process which are done 80% manually vs 90% automation
        vi.	Reduced time to market for new features by 80% i.e., 45 days to 2 weeks release cycle
        vii.Standardized framework across all FROPS in the domain.
    b.	Flow Risk/Difficult project & success
        i.	Breaking down monolith to microservice
        ii.	Different microservices
        iii.Containerizing services
        iv.	Reduce latency and effective architecture to manage high traffic scenario
        v.	Phased out approach 6 months to 18 months
        vi.	Early feedback from involved team
        vii.Collaboration among various team and stake holders
    c.	Artemis
        i.	Virtualizing servers
        ii. building brand new team
        iii.Taking ownership of the product from another team in DB while they are struggling to run it successfully
    d.	Flowrisk
        i.	Added graph feature across all the reports in the app to support/help traders make/find outliers quickly
            than going through data grids
        ii.	Introduced tow-dimensional correlation reports to help them draw report against relevant fields.
        iii.These two features are proposed by me which provided edge to traders to see the data in 2D, graphs help
            them spend less time finding anomaly's/outliers in their portfolios.
    e.	Hiring:
        i.  An EM hired & retained talented people in my team & also helped DB Cary center in hiring for various teams
            via tech-day or grad day interviews
        ii.	Had experience in building teams from ground up
        iii.Taking over team and optimizing effectively
        iv.	Providing training & career progression opportunities
    f.	Migration:
        i.	Migrating applications from physical to Azure cloud virtual servers for Artemis & DB Canvas
        ii.	Saved 100K$ by migrating to bank also utilizing hardware more effectively.
        iii.Reduced complexity of server footprint across multiple services
    g.	Improving project perception:
        i.	On-boarding/bringing projects from offshore to onshore & streamline process & reduce complexity.
        ii.	Hire brand new team & train them on application business use cases
        iii.Turning around a project that had bad reputation for missing deadlines & having production support issues.

13.	Conflict: With peer cross functional
    a.	Architected effort of backend trinity redesign.
    b.	Creating separate microservice for authorization VS Having each microservice to have wrapper to make calls to
        authorization/service
    c.	I proposed robust solution to create standalone microservice for authentication/authorization with data cache to
        support downtime by authentication/authorization providers
    d.	Enable ‘OAuth2’ authentication by all intra service communication.

14.	Conflict within team:
    a.	Conflict b/w team members
    b.	Brewed while reviewing each other code and each one has diff clean code philosophies.
    c.	Identified the conflict while observing their interactions/conversations in team meetings and talked to each one
        of them separately and learned about what’s happening
    d.	After couple of meetings with each one of them then got to root cause of the problem. Create standard working
        protocol for meeting/code reviews/scrum to eliminate friction or score for disagreement while they collaborate.
    e.	Then brought both of them to same [page by talking to them separately and In group meetings to sort-out all different opinions
    f.	In the end of this exercise, everyone seems to like new process in place.

15.	Difficult reportee:
    a.	Not on time to meetings
    b.	Missing deadlines
    c.	Communication non-existent.
    d.	Reached out as manager to understand what is happening
    e.	Provided feedback on what is being observed in team and extend gaudiness/support if needed
    f.	No improvement, After observing some issues with personal space, I enquired carefully about personal space, he/she
        opened-up which helped me to help him/her by moving meetings around after discussing change of timings in team
    g.	After these changes he respected/valued everyone in the team then he came around and was back on track like before

16.	How do you deal with low performance?
    a.	Understand which area he is struggling
    b.	Speak to him about same on weekly one on one
    c.	Learn if there are any concerns/problems that he wants to discuss with me
    d.	If he is lacking or needs help with tech-stuff provide resource and guidance on improving his/her skills
    e.	Checking him on his/her progress frequently and extending help
    f.	If his problems are related to personal space cautiously approach and offer his/her help/assistance as a manager
        to provide support
    g.	Keep providing continuous constructive feedback which help him/her to course correct if needed
    h.	Yes, it happened in my team I had to put a resource under PIP-Performance improvement plan.

17.	Describe a project in the past that was behind schedule and provide concrete steps that you took to remedy the situation:
    a.	Cash Manager: static code vulnerabilities project (40K flows ranging from cross site script(XSS), SQL injection, )
    b.	It was behind schedule delivery date which published to auditors
    c.	Initially I assigned 3 resources to address them, with the approach they took it require more hands on the deck
        to meet deadlines.
    d.	After couple sprints into release cycle, looking at number of closed flaws, nowhere closer to where they should
        be at that stage of the project timeline.
    e.	I called for meeting with the team
    f.	Discussed about their approach then figured out the problem they are having
    g.	Developed/Proposed a filter/encoder to validate all HTML input fields, which eliminates the need for changing hundreds of files with
        simple implementation of filter HTML encoder which filters out essentially all 35K+ CSS vulnerabilities.
    h.	That kept the team back on track with initially published timelines for closing these flows in code.

18.	Why MS:
    a.	I can’t think of any company other than MS that made +ve impact across the globe & every human being one way or
        other in last 30 years
    b.	MS even touched me in my college days that inspired me to be a software engineer
    c.	I started my career with MS tech stack
    d.	On the other side in recent years the growth mindset and embracing the changes adopting/leading from front in
        certain areas excited me when I think of MS.


20.	What is your favorite MS product and how would you improve it?
    a.	Product: outlook.com email, calendar board
    b.	Search based on attachment size
    c.	Allowing user to categorize new senders based on their input
    d.	This will help better ML model on this data directly coming from users than data mining
    e.	No more missing emails due to algo classifying an email as spam or junk which happens lot of people on monthly basis.
    f.	Board: Few default options for boards auto resizing of board based in screen size.

21.	How open are you to new ideas?
    a.	Open to new ideas and even encourage every one in my team to come up with something new that will help improve
        the application or add new feature in the application.
    b.	One such example is adding graph/plot support in flowrisk application proposed by one of our team members.
        I quickly realized the potential of it and provided him needed resources to come up with POC.
    c.	Another instance is in KDF regression application where I proposed hashing solution to meet/exceed SLA set forth
        by business by using less resources(server)
    d.	Another instance to help flowrisk users with head start for their day by rebooting applications automatically on
        their machines to capture real-time data to be ready by the time traders start their day.

22.	Tell me about a time you learned from your mistake
    a.	Estimated timelines for onboarding EM business onto new trinity platform was incorrect due to a wrong assumptions in
        analysis stage of complex products supported/traded by EM desks
    b.	Find a MVP by working with EM desk heads to see how flexible are their timelines given other migrations in pipeline.
    c.	Had few meetings with team looked at all features in flight for upcoming release and worked with product-owner of
        cross functional team, collaboratively/collectively decided to prioritize couple items & repurposed some additional
        resource to work on EM task.
    d.	Sent for early feedback from EM business and was able to onboard EM business onto trinity on time & within
        another week of originally agreed timelines, was able to release re-prioritized items to prod.
    e.	Lessons learned, break down features/tasks as granular as possible then start analyzing if any assumptions are
        made get them verified by business even if I’m the SME of the application, as early in the process as possible.

23.	What has been your biggest accomplishment so far?
    a.	Talk about trinity redesign
    b.	Talk about flowrisk application/journey to microservices and solving latency problems/making system distributed
        and highly available
    c.	Helping FIC business by reducing cost by 10 million year by designing a framework to automate manual task done
        by desk analysis and support folk for these applications.

24.	Tell me about a time you had to drive a feature through?
    a.	Talk about gap in release cycle between risk engine and trinity flowrisk
    b.	Proposed solution ie KDF system to solve the problem or gap
    c.	Collaboration with FORP teams, upstream support teams and product owners and business stake holders
    d.	Successfully delivered project in 6 months and as the request for new features keeps flowing from various desks
        supported, provided support to enhance + add new features as they requested.
    e.	Saved hundreds of man hours thus by saving hundreds of thousands of $$$ to bank and delivering features to desk
        on time which in turn helped trading desk with trading confidently and hedge better
    f.	Constant communication was key between all involved parties in successfully delivering this application/feature.
    g.	/this feature/appl is also helping reduce pressure/workload on SL1/SL2/SL3 support teams.

25.	Did you ever fire someone? Did you ever put someone on PIP? Why?
    a.	No, I never had to fire anyone, but I’ve worked with one of the reportee/resource on improving his/her performance.
    b.	Reason for PIP was continuously not able to complete task assigned to him/her and when he/she does complete,
        they caused bugs at testing phase instance at prod stage.
    c.	Also, not punctual to meetings or team activities.
    d.	Worked with resource/reportee one-n-one basis to understand his concerns at work with him if any? provided guidance
        and plan on improving his/her performance both with team and deliverable KPI’s
    e.	After few weeks, observed improvement in his/her performance but there was still work to do, I further reconstructed
        his PIP plan according to new results which eventually paid off.
    f.	Problem was he is new to finance space and tech stack we are working with and complex nature of application didn't
        even help him to get hold of code/architecture.

26.	How you will be an asset in supporting the career development of those working under you?
    a.	I believe in a leader who leads by example and not just take decisions but works for his/her team by upholding
        organizations principles highest standards and listens to them. i.e. leader not only a great decision maker but
        should also be great listener.
    b.	That is how I operate my team on 1-1’s. I listen to them, ask for their aspirations then will device a plan
        together to make it happen.
    c.	I constantly provide constructive feedback and help him/her be on the correct trajectory to reach their goal.
    d.	Provide visibility whenever possible so that they will standout in broader organization which will help them with
        much needed exposure which will go long way in career development.
    e.	With this approach I was able to promote 3 of my direct repositories in last few years.

27.	How would disagree with your manager?
    a.	This happened with me and my manager on couple occasions where we had contrasting opinions on how to approach a
        particular initiative
    b.	Or talk about rating resources for promotions from pool of resources and comparison to my employee to others in his org.
    c.	Example: Enabling two factor authentications on legacy application
    i.	I listened to what he had to say about his version and applications which are on that path
    ii.	Then requested him to listen to approach I’m proposing explained gaps b/w both and assumptions in both options and risks.
    iii.Solving core business need if he(manager & stake holders) willing to get business on board with risks and gaps then I said I was okay.
        If not it will be a risk which I’m not comfortable to take as it will bite us back at later stage for sure based on
        requirements.
    iv.	I’ll go with evidence when I’m disagreeing with manager or anyone for that matter, even after that if they still see merit in
        their approach, I might be missing something they are seeing. ask for follow-up sessions to provide evidence supporting their claims.

28.	Tell me about a time you made an unpopular decision?
    a.	Making everyone part of support rotation/team.
    b.	Prior to this there used to be one primary and one secondary support persons for production support.
    c.	This model proved unsuccessful and heavily dependent on one/two resources. No direct communication with users to
        devs who are creating their applications.
    d.	Team was not happy to be kept on support rotation initially due to after hours support if there is any issue in app
        in EM/Asia time zones.
    e.	Tried to explain benefits of having interaction with users and access to users for career development i.e., promotions
        after couple rotations team got hold of new process and they started seeing positive side of it and long-term
        benefits to team. They finally happy with my decision as couple of user recommendations played huge role in getting
        my resources prompted.

29. What do you look for in a resume?
    a. Minimum skills required to be successful on the role
    b. Diverse experiences and Specifics about any impactful deliverables
    c. Progressive career depending on role I'm hiring for.

30. How do you ensure you are hiring a healthy spread of diverse thinking in your team?
    a. Right mix of seniority's in team i.e. Interns, Jr, Mid, Sr and Lead engineers
    b. People from diverse backgrounds i.e. from different domains whenever possible
    c. People with inclusive and positive attitude.
    d. Team players

31. You have to ramp up your team headcount quickly. Would you prefer waiting for the right candidate? Why or why not?
    a. Build diverse candidate pool by working with various sourcing channels like internal mobility, recruiters both
       internal and external, social network channels and referrals.
    b. Conduct interviews parallel as a priority
    c. After identifying potential candidates for the roles, take time to personally speak with each candidate to sale the
       role and project that we are working.
    d. Yes, I do want to wait for right candidate for the role, if not he may struggle in the role and will impact the
       overall performance and velocity of the team which is not good outcome I wanted to with any new hire.

32. What goes into a project plan?
    A typical project plan consists of
    a. A statement of work
    b. a resource list
    c. work breakdown structure
    d. a project schedule and a risk plan

33. What is WBS (work breakdown structure)? How would you use it?
    Work breakdown structure is a helpful project management tool for several reasons. First, it breaks down the project
    into bite-size components, making the project less overwhelming and more manageable.

    Second, it provides a roadmap for the different individuals and teams working on the project. Many projects involve
    different teams moving in tandem, all of which need to coordinate and integrate for project completion. By using a WBS,
    the various individuals and teams can focus on their specific tasks and deliverables while also seeing how their piece
    fits into the project as a whole.

    Finally, a WBS is an excellent tool for measuring project completion, identifying milestones and allocating budget
    resources. By using the 100% rule, project managers can be confident that the project is properly budgeted and that
    they won’t run into any roadblocks due to a “surprise” deliverable.

    Some commonly used terms used with WBS project management include:
    Acceptance Criteria: Standards to be met to achieve customer or other stakeholder requirements
    Budget: Expenses associated with the project, which can be broken down by deliverables or phases
    Deliverables: The product, service or results created at various stages of the project. For instance, in a website
                  design project, a deliverable-based WBS would be structured around deliverables such as URL, layout and
                  written content
    Milestones: Critical stages of the project identified in the WBS
    Phases: The various stages of a project. For instance, in a website design project, a phase-based WBS would be
            structured around things like discovery, design and launch, rather than specific deliverables
    WBS: Work breakdown structure

